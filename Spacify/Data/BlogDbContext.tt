<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="..\T4\TemplateFileManager.ttinclude" #>
<#
	var manager = TemplateFileManager.Create(this);
	GenerateBundle("Spacify");
	var file = Path.GetFileNameWithoutExtension(Host.TemplateFile) + ".cs.pp";
	manager.StartNewFile(file);
	GenerateBundle("$rootnamespace$");
	manager.Process();
#>

<#+
private void GenerateBundle(string rootNamespace)
{
#>
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq;
using System.Web;
using <#= rootNamespace #>.Models;

namespace <#= rootNamespace #>.Data
{
    public class BlogDbContext : DbContext
    {
        public DbSet<Blog> Blogs { get; set; }

        static BlogDbContext()
        {
            //TODO: uncomment the next line after building the project
            //Database.SetInitializer(new BlogDbInitializer());
        }

        public BlogDbContext()
            : base("Blogs")
        {
            Configuration.ProxyCreationEnabled = false;
            Configuration.LazyLoadingEnabled = false;
        }

        //TODO: uncomment the next line after building the project
        //private class BlogDbInitializer : MigrateDatabaseToLatestVersion<BlogDbContext, Migrations.Configuration> { }
    }
}
<#+
}
#>