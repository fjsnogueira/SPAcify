<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="..\T4\TemplateFileManager.ttinclude" #>
<#
	var manager = TemplateFileManager.Create(this);
	GenerateBundle("Spacify");
	var file = Path.GetFileNameWithoutExtension(Host.TemplateFile) + ".cs.pp";
	manager.StartNewFile(file);
	GenerateBundle("$rootnamespace$");
	manager.Process();
#>

<#+
private void GenerateBundle(string rootNamespace)
{
#>
using System.Web.Http;

[assembly: WebActivator.PreApplicationStartMethod(
    typeof(<#= rootNamespace #>.App_Start.BreezeWebApiConfig), "RegisterBreezePreStart", Order = 1)]
namespace <#= rootNamespace #>.App_Start
{
    ///<summary>
    /// Inserts the Breeze Web API controller route at the front of all Web API routes
    ///</summary>
    ///<remarks>
    /// This class is discovered and run during startup; see
    /// http://blogs.msdn.com/b/davidebb/archive/2010/10/11/light-up-your-nupacks-with-startup-code-and-webactivator.aspx
    ///</remarks>
    public static class BreezeWebApiConfig
    {
        public static void RegisterBreezePreStart()
        {
            GlobalConfiguration.Configuration.Routes.MapHttpRoute(
                name: "Module",
                routeTemplate: "breeze/{controller}/{action}"
                );

            GlobalConfiguration.Configuration.Routes.MapHttpRoute(
                name: "WebApi",
                routeTemplate: "breeze/{action}",
                defaults: new {Controller = "Default"}
                );
        }
    }
}
<#+
}
#>